#!/bin/bash

# Script de g√©n√©ration de PDF √† partir du guide Markdown
# Auteur: Floriace FAVI
# Date: 2025-04-17

echo "üîÑ G√©n√©ration du guide PDF pour le d√©ploiement sur AWS EKS..."

# V√©rifier si pandoc est install√©
if ! command -v pandoc &> /dev/null; then
    echo "‚ùå pandoc n'est pas install√©. Installation en cours..."
    
    # D√©tection du syst√®me d'exploitation
    OS="$(uname)"
    
    case "$OS" in
        Darwin)  # macOS
            if command -v brew &> /dev/null; then
                brew install pandoc
            else
                echo "‚ùå Homebrew n'est pas install√©. Veuillez installer pandoc manuellement."
                echo "üìã Instructions: https://pandoc.org/installing.html"
                exit 1
            fi
            ;;
            
        Linux)  # Linux
            if command -v apt-get &> /dev/null; then
                sudo apt-get update
                sudo apt-get install -y pandoc
            elif command -v yum &> /dev/null; then
                sudo yum install -y pandoc
            else
                echo "‚ùå Impossible d'installer pandoc automatiquement. Veuillez l'installer manuellement."
                echo "üìã Instructions: https://pandoc.org/installing.html"
                exit 1
            fi
            ;;
            
        *)  # Autre
            echo "‚ùå Syst√®me d'exploitation non pris en charge pour l'installation automatique de pandoc."
            echo "üìã Veuillez installer pandoc manuellement: https://pandoc.org/installing.html"
            exit 1
            ;;
    esac
fi

# V√©rifier si wkhtmltopdf est install√© (pour la conversion en PDF)
if ! command -v wkhtmltopdf &> /dev/null; then
    echo "‚ùå wkhtmltopdf n'est pas install√©. Installation en cours..."
    
    # D√©tection du syst√®me d'exploitation
    OS="$(uname)"
    
    case "$OS" in
        Darwin)  # macOS
            if command -v brew &> /dev/null; then
                brew install wkhtmltopdf
            else
                echo "‚ùå Homebrew n'est pas install√©. Veuillez installer wkhtmltopdf manuellement."
                echo "üìã Instructions: https://wkhtmltopdf.org/downloads.html"
                exit 1
            fi
            ;;
            
        Linux)  # Linux
            if command -v apt-get &> /dev/null; then
                sudo apt-get update
                sudo apt-get install -y wkhtmltopdf
            elif command -v yum &> /dev/null; then
                sudo yum install -y wkhtmltopdf
            else
                echo "‚ùå Impossible d'installer wkhtmltopdf automatiquement. Veuillez l'installer manuellement."
                echo "üìã Instructions: https://wkhtmltopdf.org/downloads.html"
                exit 1
            fi
            ;;
            
        *)  # Autre
            echo "‚ùå Syst√®me d'exploitation non pris en charge pour l'installation automatique de wkhtmltopdf."
            echo "üìã Veuillez installer wkhtmltopdf manuellement: https://wkhtmltopdf.org/downloads.html"
            exit 1
            ;;
    esac
fi

# Chemin du fichier Markdown
MARKDOWN_FILE="../guide_deploiement_aws_eks.md"

# Chemin du fichier PDF de sortie
PDF_FILE="../guide_deploiement_aws_eks.pdf"

# V√©rifier si le fichier Markdown existe
if [ ! -f "$MARKDOWN_FILE" ]; then
    echo "‚ùå Le fichier Markdown n'existe pas: $MARKDOWN_FILE"
    exit 1
fi

# G√©n√©rer le PDF
echo "üîÑ Conversion du Markdown en PDF..."
pandoc "$MARKDOWN_FILE" \
    -f markdown \
    -t html \
    -o "$PDF_FILE" \
    --pdf-engine=wkhtmltopdf \
    --toc \
    --toc-depth=3 \
    --highlight-style=tango \
    --variable margin-top=25 \
    --variable margin-right=25 \
    --variable margin-bottom=25 \
    --variable margin-left=25 \
    --variable papersize=a4 \
    --variable colorlinks=true \
    --variable linkcolor=blue \
    --variable urlcolor=blue \
    --variable toccolor=blue \
    --variable title="Guide de D√©ploiement sur AWS EKS" \
    --variable author="Floriace FAVI" \
    --variable date="$(date +%Y-%m-%d)"

# V√©rifier si la g√©n√©ration a r√©ussi
if [ $? -eq 0 ]; then
    echo "‚úÖ PDF g√©n√©r√© avec succ√®s: $PDF_FILE"
else
    echo "‚ùå Erreur lors de la g√©n√©ration du PDF."
    exit 1
fi

echo "üìö Le guide PDF est pr√™t √† √™tre distribu√© aux √©tudiants."
